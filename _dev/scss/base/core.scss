$green: #0F4A30;
$darkGreen: #133627;
$light: #F5F2D9;
$lightGreen: #CDEDDF;

html {
    scroll-behavior: smooth;
    scroll-padding-top: 10vh;
}

body {
    background-color: $green;
    font-size: clamp(16px, 1.05vw, 22px);
    color: $light;
    font-family: 'Poppins', sans-serif;
}

#wpadminbar {
    display: none;
}

h1, h2, h3, h4 {
    font-family: 'Playfair Display', serif;
    font-weight: 400;
}

a {
    text-decoration: none;
    color: inherit;
}

h1 {
    font-size: 2.488rem;
    line-height: 1.1;
}

h2 {
    font-size: 2.074rem;
    line-height: 1.3;

    font-size: clamp(24px,3.2vw,70px);
}

h3 {
    font-size: 1.728rem;
    line-height: 1.3;
}

h4 {
    font-size: 1.44rem;
    line-height: 1.4;
}

$breakpoints: (
  'mobile':  480px,
  'small': 768px,
  'tablet': 1024px,
  'laptop':  1366px,
  '1440': 1440px,
  'large': 1920px
) !default;

@mixin responsive($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
      // Prints a media query based on the value
      @media (max-width: map-get($breakpoints, $breakpoint)) {
        @content;
      }
    }
   
    // If the key doesn't exist in the map
    @else {
      @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}




$container: 80vw;
$containerMobile: 90vw;

.container {
    width: min($container, 1600px);
    margin: 0 auto;
    position: relative;
    @include responsive('tablet') {
        width: min($containerMobile, 900px);
    }
}

.container-big {
    @extend .container;
    width: min(94vw, 1920px);

    @include responsive('small') {
        width: min(90vw, 768px);
    }
}

@media screen and (max-width: 782px) {
    html {
        margin-top: 0px !important;
    }
}

.headingBig--revert {
    font-size: clamp(24px, 3.2vw, 70px);
}

.rotateText {
    transform: rotate(180deg);
    -webkit-transform: rotate(180deg);
    -moz-transform: rotate(180deg);
    -ms-transform: rotate(180deg);
    -o-transform: rotate(180deg);
    writing-mode: vertical-rl;
    -webkit-writing-mode: vertical-rl;
    -ms-writing-mode: vertical-rl;

    @include responsive('tablet') {
        transform: rotate(0deg);
        -webkit-transform: rotate(0deg);
        -moz-transform: rotate(0deg);
        -ms-transform: rotate(0deg);
        -o-transform: rotate(0deg);
        writing-mode: unset;
        -webkit-writing-mode: unset;
        -ms-writing-mode: unset;
    }
}

.textBig--outline {
    font-family: 'Playfair Display', serif;
    color: transparent;
    -webkit-text-stroke: 1px $lightGreen;
    opacity: .3;
    font-size: clamp(80px, 12.5vw, 250px);
    line-height: 1;
}